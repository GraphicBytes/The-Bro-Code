//#####################
//##### MAIN MENU #####
//#####################

.header{
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  width:100%;
  overflow: hidden;
  @include shadow_on;
  position: fixed;
  z-index: 50000;
  top:0;
  left:0;

  &:before{
    background: $darkgrey;
    @include bar_gradient;
    display: block;
    width:100%;
    height: 100%;
    position: absolute;
    top:0;
    left:0;
    content: "\00a0";
    z-index: -2;
  }
  &:after{
    display: block;
    width:100%;
    height: 100%;
    position: absolute;
    top:0;
    left:0;
    content: "\00a0";
    z-index: -1;
    opacity: 0.6;
  }

}
.header-fill{
  display: block;
  width:100%;
}
.header{
  .header-middle{
    display: flex;
  }

  .header-right{
    display: flex;
    justify-content: flex-end;
  }
}

.logo-container{
  height: 30px;
  display: flex;
  align-items: center;
}
.logo-small{
  display: block;
  width: auto;

  fill:$bggrey;
  @include ani;
  transform: rotate(360.01deg)scale(1);
  will-change: transform,filter;
  filter:drop-shadow(5px 5px 5px rgba(0,0,0,0.2));

  &:hover{
    opacity:1;
    fill:$blue;
    transform: rotate(360.01deg)scale(1.02);
    filter:drop-shadow(5px 5px 5px rgba(0,0,0,0.65));
    will-change: transform,filter;
  }
}


.main-menu{
  display: flex;
  width:100%;
  justify-content: flex-end;
  align-items: center;
  border-right:1px solid $mediumgrey;

  a{
    display: block;
    line-height: 67px;
    height: 67px;
    @include ani;
    padding:3px 20px 0 20px;
    color:$border;
    font-size: 1.1em;
    font-weight:$medium;
    text-decoration: none;
    border-left:1px solid $mediumgrey;
    @include text-shadow;
    font-family: $font2;
    position: relative;
    z-index: 20;

    &:before,&:after{
      @include ani();
    }

    &:before{
      @include bg_bluegrad;
      display: block;
      width:100%;
      height: 100%;
      position: absolute;
      top:0;
      left:0;
      content: "\00a0";
      z-index: -2;
      opacity: 0;
    }
    &:after{
      display: block;
      width:100%;
      height: 100%;
      position: absolute;
      top:0;
      left:0;
      content: "\00a0";
      z-index: -1;
      opacity: 0;
    }

    &:hover, &.current{
      &:before,&:after{opacity: 1;}
      color:$border;
    }
  }
}







// Settings
// ==================================================
$hamburger-padding-x           : 5px !default;
$hamburger-padding-y           : 0px !default;
$hamburger-layer-width         : 25px !default;
$hamburger-layer-height        : 4px !default;
$hamburger-layer-spacing       : 3px !default;
$hamburger-layer-color         : $white !default;
$hamburger-layer-border-radius : 4px !default;
$hamburger-hover-opacity       : 1 !default;
$hamburger-active-layer-color  : $hamburger-layer-color !default;
$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter   : false !default;
$hamburger-hover-filter       : opacity(50%) !default;
$hamburger-active-hover-filter: $hamburger-hover-filter !default;

// Types (Remove or comment out what you donâ€™t need)
// ==================================================
$hamburger-types: (
  squeeze
) !default;


// Hamburger types
// ==================================================
@if index($hamburger-types, squeeze) {
  /*
   * Squeeze
   */
  .hamburger--squeeze {
    .hamburger-inner {
      transition-duration: 0.075s;
      transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19);

      &::before {
        transition: top 0.075s 0.12s ease,
                    opacity 0.075s ease;
      }

      &::after {
        transition: bottom 0.075s 0.12s ease,
                    transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);
      }
    }

    &.is-active {
      .hamburger-inner {
        transform: rotate(45deg);
        transition-delay: 0.12s;
        transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

        &::before {
          top: 0;
          opacity: 0;
          transition: top 0.075s ease,
                      opacity 0.075s 0.12s ease;
        }

        &::after {
          bottom: 0;
          transform: rotate(-90deg);
          transition: bottom 0.075s ease,
                      transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
        }
      }
    }
  }
}

// ==================================================
// Cooking up additional types:
//
// The Sass for each hamburger type should be nested
// inside an @if directive to check whether or not
// it exists in $hamburger-types so only the CSS for
// included types are generated.
//
// e.g. hamburgers/types/_new-type.scss
//
// @if index($hamburger-types, new-type) {
//   .hamburger--new-type {
//     ...
//   }
// }


// Hamburger
// ==================================================
.hamburger {
  padding: $hamburger-padding-y $hamburger-padding-x;
  display: inline-block;
  cursor: pointer;

  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;

  // Normalize (<button>)
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;


  &:hover {
    @if $hamburger-hover-use-filter == true {
      filter: $hamburger-hover-filter;
    }
    @else {
      opacity: $hamburger-hover-opacity;
    }
  }

  &.is-active {
    &:hover {
      @if $hamburger-hover-use-filter == true {
        filter: $hamburger-active-hover-filter;
      }
      @else {
        opacity: $hamburger-active-hover-opacity;
      }
    }

    .hamburger-inner,
    .hamburger-inner::before,
    .hamburger-inner::after {
      background-color: $hamburger-active-layer-color;
    }
  }
}

.hamburger-box {
  width: $hamburger-layer-width;
  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: $hamburger-layer-height / -2;

  &,
  &::before,
  &::after {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }

  &::after {
    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;
  }
}






// small devices (max-width: 450px) - xs
.header{
  height:50px;

  .header-left{
    width:20%;
    height:50px;
    display: flex;
    justify-content: flex-start;
    align-items: center;

    .prev-icon{
      fill:$white;
      display: block;
      height:20px;
      width:auto;
      position: relative;

    }
  }

  .header-middle{
    width:60%;
    height:50px;
    justify-content: center;
  }
  .header-right{
    padding:2px 0 0px 0;
    width:20%;
    height:50px;
  }
}
.logo-container{
  width:100%;
  justify-content: center;
  margin:11px 0 0 0;
  padding:0 0 0 0;
}
.logo-small{height: 1em;}

.header-fill{height:50px;}

// Medium devices - md
@media all and (min-width: 700px) {

  .header-left{
    display: none!important;
    .prev-icon{
      display: none!important;
    }
  }

  .header{
    height:70px;

    .header-middle{
      width:50%;
      height:70px;
      justify-content: flex-start;
    }
    .header-right{
      width:50%;
      height:70px;
    }
  }
  .logo-container{
    justify-content: flex-start;
    width:100%;
    margin:20px 0 0 0;
    padding:0 0 0 5px;
  }
  .logo-small{height: 1.25em;}

  .header-fill{height:60px;}
}

// Large devices- lg
@media all and (min-width: 950px) {
  .header-fill{height:50px;}
}

// Extra large devices - xl
@media all and (min-width: 1200px) {

}
























//
